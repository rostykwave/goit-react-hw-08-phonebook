{"version":3,"file":"static/js/432.b87d9241.chunk.js","mappings":"+LAwDA,UApDqB,WACnB,IAAMA,GAAWC,EAAAA,EAAAA,MAMjB,OACE,4BACE,yCACA,SAAC,KAAD,CACEC,cAAe,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IAChDC,SAAU,SAAAC,GACR,IAAMC,EAAS,GAQf,OAPKD,EAAOH,MAGT,2CAA2CK,KAAKF,EAAOH,SAExDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,WAMVI,GAETE,SApBe,SAACH,EAAD,GAA+B,EAApBI,cAC9BX,EAASY,EAAAA,GAAAA,SAAwBL,KAM/B,SAeG,gBAAGM,EAAH,EAAGA,aAAH,OACC,UAAC,KAAD,YACE,8BACE,oCACA,SAAC,KAAD,CAAOC,KAAK,OAAOX,KAAK,UACxB,SAAC,KAAD,CAAcA,KAAK,OAAOY,UAAU,YAEtC,8BACE,qCACA,SAAC,KAAD,CAAOD,KAAK,QAAQX,KAAK,WACzB,SAAC,KAAD,CAAcA,KAAK,QAAQY,UAAU,YAEvC,8BACE,wCACA,SAAC,KAAD,CAAOD,KAAK,WAAWX,KAAK,cAC5B,SAAC,KAAD,CAAcA,KAAK,WAAWY,UAAU,YAE1C,mBAAQD,KAAK,SAASE,SAAUH,EAAhC","sources":["pages/RegisterPage.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    dispatch(authOperations.register(values));\n  };\n\n  return (\n    <div>\n      <h1>Login Page!</h1>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n          ) {\n            errors.email = 'Invalid email address';\n          }\n          return errors;\n        }}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <label>\n              <span>Name</span>\n              <Field type=\"name\" name=\"name\" />\n              <ErrorMessage name=\"name\" component=\"div\" />\n            </label>\n            <label>\n              <span>Email</span>\n              <Field type=\"email\" name=\"email\" />\n              <ErrorMessage name=\"email\" component=\"div\" />\n            </label>\n            <label>\n              <span>Password</span>\n              <Field type=\"password\" name=\"password\" />\n              <ErrorMessage name=\"password\" component=\"div\" />\n            </label>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { authOperations } from '../redux/auth';\n\n// const styles = {\n//   form: {\n//     width: 320,\n//   },\n//   label: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     marginBottom: 15,\n//   },\n// };\n\n// const RegisterPage = () => {\n//   const dispatch = useDispatch();\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const handleChange = ({ target: { name, value } }) => {\n//     switch (name) {\n//       case 'name':\n//         return setName(value);\n//       case 'email':\n//         return setEmail(value);\n//       case 'password':\n//         return setPassword(value);\n//       default:\n//         return;\n//     }\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     dispatch(authOperations.register({ name, email, password }));\n//     setName('');\n//     setEmail('');\n//     setPassword('');\n//   };\n\n//   return (\n//     <div>\n//       <h1>Registration Page</h1>\n\n//       <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n//         <label style={styles.label}>\n//           Name\n//           <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n//         </label>\n\n//         <label style={styles.label}>\n//           Mail\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             value={email}\n//             onChange={handleChange}\n//           />\n//         </label>\n\n//         <label style={styles.label}>\n//           Password\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             value={password}\n//             onChange={handleChange}\n//           />\n//         </label>\n\n//         <button type=\"submit\">Register</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default RegisterPage;\n"],"names":["dispatch","useDispatch","initialValues","name","email","password","validate","values","errors","test","onSubmit","setSubmitting","authOperations","isSubmitting","type","component","disabled"],"sourceRoot":""}